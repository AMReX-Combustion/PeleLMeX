name: PeleLMeX_linux

on: 
   workflow_dispatch:
   push:
     branches: [ main, development ]
   pull_request:
     branches: [ main, development ]

jobs:
  #Build the 2D FlameSheet RegTest with GNU7.5 and no MPI support
  FS2D_NoMPI:
    name: GNU@7.5 NOMPI Comp [FS2D]
    runs-on: ubuntu-18.04
    env: 
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{github.token}}
    - uses: actions/checkout@v2
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      run: |
        cd Exec/RegTests/FlameSheet/
        make TPL COMP=gnu USE_MPI=FALSE
        make -j 2 COMP=gnu USE_MPI=FALSE
  
  # Build the 2D FlameSheet RegTest with GNU7.5 and MPI support
  FS2D_MPI:
    name: GNU@7.5 MPI Comp [FS2D]
    runs-on: ubuntu-18.04
    env: 
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{github.token}}
    - uses: actions/checkout@v2
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      run: |
        cd Exec/RegTests/FlameSheet/
        make TPL COMP=gnu
        make -j 2 COMP=gnu
  
  # Build the 2D FlameSheet RegTest with GNU7.5 and MPI+OMP support
  FS2D_MPIOMP:
    name: GNU@7.5 MPI OMP Comp [FS2D]
    runs-on: ubuntu-18.04
    env: 
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{github.token}}
    - uses: actions/checkout@v2
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      run: |
        cd Exec/RegTests/FlameSheet/
        make TPL COMP=gnu USE_OMP=TRUE
        make -j 2 COMP=gnu USE_OMP=TRUE

  # Build and Run the CoVo RegTest with GNU7.5 and no MPI support
  COVO2D_NoMPIRun:
    name: GNU@7.5 NOMPI Run [COVO2D]
    runs-on: ubuntu-18.04
    env: 
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{github.token}}
    - uses: actions/checkout@v2
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      working-directory: ./Exec/RegTests/PeriodicCases/
      run: |
        make TPL COMP=gnu USE_MPI=FALSE
        make -j 2 COMP=gnu USE_MPI=FALSE
    - name: Run
      working-directory: ./Exec/RegTests/PeriodicCases/
      run: |
        ./PeleLMeX2d.gnu.ex input.2d_CoVo amr.max_step=2 amr.plot_int=-1 amr.check_int=-1

  # Build and Run the HoBubble RegTest with GNU7.5 and MPI support
  HB2D_MPIRun:
    name: GNU@7.5 MPI Run [HB2D]
    runs-on: ubuntu-18.04
    env: 
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{github.token}}
    - uses: actions/checkout@v2
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      working-directory: ./Exec/RegTests/HotBubble/
      run: |
        make TPL COMP=gnu USE_MPI=TRUE
        make -j 2 COMP=gnu USE_MPI=TRUE
    - name: Run
      working-directory: ./Exec/RegTests/HotBubble/
      run: |
        ./PeleLMeX2d.gnu.MPI.ex input.2d-regt amr.max_step=20 amr.plot_int=-1 amr.check_int=-1

  # Build and Run the HoBubble RegTest with GNU7.5 in DEBUG
  HB2D_DBGRun:
    name: GNU@7.5 DEBUG Run [HB2DDBG]
    runs-on: ubuntu-18.04
    env: 
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{github.token}}
    - uses: actions/checkout@v2
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      working-directory: ./Exec/RegTests/HotBubble/
      run: |
        make TPL COMP=gnu DEBUG=TRUE USE_MPI=FALSE
        make -j 2 COMP=gnu DEBUG=TRUE USE_MPI=FALSE
    - name: Run
      working-directory: ./Exec/RegTests/HotBubble/
      run: |
        ./PeleLMeX2d.gnu.DEBUG.ex input.2d-regt amr.max_step=20 amr.plot_int=-1 amr.check_int=-1

  # Build and Run the EnclosedFlame RegTest with GNU7.5 and MPI support
  EF2D_MPIRun:
    name: GNU@7.5 MPI Run [EF2D]
    runs-on: ubuntu-18.04
    env: 
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{github.token}}
    - uses: actions/checkout@v2
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      working-directory: ./Exec/RegTests/EnclosedFlame/
      run: |
        make TPL COMP=gnu USE_MPI=TRUE
        make -j 2 COMP=gnu USE_MPI=TRUE
    - name: Run
      working-directory: ./Exec/RegTests/EnclosedFlame/
      run: |
        ./PeleLMeX2d.gnu.MPI.ex input.2d-regt amr.max_step=2 amr.plot_int=-1 amr.check_int=-1

  # Build and Run the EB_FlowPastCylinder RegTest with GNU7.5 and MPI support
  FPC2D_MPIRun:
    name: GNU@7.5 MPI Run [FPC2D]
    runs-on: ubuntu-18.04
    env: 
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{github.token}}
    - uses: actions/checkout@v2
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      working-directory: ./Exec/RegTests/EB_FlowPastCylinder/
      run: |
        make TPL COMP=gnu USE_MPI=TRUE
        make -j 2 COMP=gnu USE_MPI=TRUE
    - name: Run
      working-directory: ./Exec/RegTests/EB_FlowPastCylinder/
      run: |
        ./PeleLMeX2d.gnu.MPI.ex input.2d-regt amr.max_step=2 amr.plot_int=-1 amr.check_int=-1
        ./PeleLMeX2d.gnu.MPI.ex input.2d-regt_WallBump amr.max_step=2 amr.plot_int=-1 amr.check_int=-1

  # Build and Run the HIT RegTest with GNU7.5 and MPI support
  HIT3D_MPIRun:
    name: GNU@7.5 MPI Run [HIT3D]
    runs-on: ubuntu-18.04
    env: 
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{github.token}}
    - uses: actions/checkout@v2
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      working-directory: ./Exec/RegTests/HITDecay/
      run: |
        make TPL COMP=gnu USE_MPI=TRUE
        make -j 2 COMP=gnu USE_MPI=TRUE
    - name: Run
      working-directory: ./Exec/RegTests/HITDecay/
      run: |
        ./PeleLMeX3d.gnu.MPI.ex input.3d amr.max_step=10 amr.plot_int=-1 amr.check_int=-1


  # Build and Run the EB_PipeFlow RegTest with GNU7.5 and MPI support
  EBPF3D_MPIRun:
    name: GNU@7.5 MPI Run [EBPF3D]
    runs-on: ubuntu-18.04
    env: 
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{github.token}}
    - uses: actions/checkout@v2
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      working-directory: ./Exec/RegTests/EB_PipeFlow/
      run: |
        make TPL COMP=gnu USE_MPI=TRUE
        make -j 2 COMP=gnu USE_MPI=TRUE
    - name: Run
      working-directory: ./Exec/RegTests/EB_PipeFlow/
      run: |
        ./PeleLMeX3d.gnu.MPI.ex input.3d-regt amr.max_step=2 amr.plot_int=-1 amr.check_int=-1

  # Build and Run the TurbInflow RegTest in DEBUG with GNU7.5 and MPI support
  TI3D_MPIRun:
    name: GNU@7.5 MPI Run [TI3DDBG]
    runs-on: ubuntu-18.04
    env: 
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{github.token}}
    - uses: actions/checkout@v2
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: GenerateTurbFile
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      working-directory: ./Exec/RegTests/TurbInflow/TurbFileHIT
      run: |
        make -j 2 COMP=gnu
        ./PeleTurb3d.gnu.ex input hit_file=../../HITDecay/hit_ic_4_32.dat input_ncell=32
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      working-directory: ./Exec/RegTests/TurbInflow/
      run: |
        make TPL COMP=gnu USE_MPI=TRUE DEBUG=TRUE
        make -j 2 COMP=gnu USE_MPI=TRUE DEBUG=TRUE
    - name: Run
      working-directory: ./Exec/RegTests/TurbInflow/
      run: |
        mpirun -n 2 ./PeleLMeX3d.gnu.DEBUG.MPI.ex input.3d peleLM.num_init_iter=1 amr.n_cell=32 32 32 amr.max_step=2 amr.plot_int=-1 amr.check_int=-1
        mpirun -n 2 ./PeleLMeX3d.gnu.DEBUG.MPI.ex input.3d_negY peleLM.num_init_iter=1 amr.n_cell=32 32 32 amr.max_step=2 amr.plot_int=-1 amr.check_int=-1
        mpirun -n 2 ./PeleLMeX3d.gnu.DEBUG.MPI.ex input.3d_posX peleLM.num_init_iter=1 amr.n_cell=32 32 32 amr.max_step=2 amr.plot_int=-1 amr.check_int=-1
        mpirun -n 2 ./PeleLMeX3d.gnu.DEBUG.MPI.ex input.3d_BoxLoZ peleLM.num_init_iter=1 amr.n_cell=32 32 32 amr.max_step=2 amr.plot_int=-1 amr.check_int=-1
