name: PeleLMeX_linux

on:
   workflow_dispatch:
   push:
     branches: [ main, development ]
   pull_request:
     branches: [ main, development ]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-PeleLMeX_linux
  cancel-in-progress: true

jobs:
  # Build and Run the EB_FlowPastCylinder RegTest with GNU9.3 and MPI support
  #FPC2D:
  #  name: GNU@9.3 MPI Run [FPC2DDBG]
  #  runs-on: ubuntu-latest
  #  env:
  #    {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
  #  steps:
  #  - uses: actions/checkout@v3
  #  - name: System Dependencies
  #    run: .github/workflows/dependencies/dependencies_gcc10.sh
  #  - name: Repo Dependencies
  #    run: Utils/CloneDeps.sh
  #  - name: Build
  #    env:
  #       AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
  #       PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
  #       PELELMEX_HOME: ${GITHUB_WORKSPACE}
  #       AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
  #       SUNDIALS_HOME : ${GITHUB_WORKSPACE}/build/sundials
  #    working-directory: ./Exec/RegTests/EB_FlowPastCylinder/
  #    run: |
  #      make TPL COMP=gnu USE_MPI=TRUE DEBUG=TRUE
  #      make -j 2 COMP=gnu USE_MPI=TRUE DEBUG=TRUE
  #  - name: Run
  #    working-directory: ./Exec/RegTests/EB_FlowPastCylinder/
  #    run: |
  #      ./PeleLMeX2d.gnu.DEBUG.MPI.ex input.2d-regt amr.max_step=2 amr.plot_int=-1 amr.check_int=-1 amrex.fpe_trap_invalid=1 amrex.fpe_trap_zero=1 amrex.fpe_trap_overflow=1
  #      ./PeleLMeX2d.gnu.DEBUG.MPI.ex input.2d-regt_WallBump amr.max_step=2 amr.plot_int=-1 amr.check_int=-1

  #      make -j 2 COMP=gnu USE_MPI=TRUE
  #  - name: RunDNS
  #    working-directory: ./Exec/RegTests/HITDecay/
  #    run: |
  #      ./PeleLMeX3d.gnu.MPI.ex input.3d amr.max_step=10 amr.plot_int=-1 amr.check_int=-1
  #  - name: RunLES_Smago
  #    working-directory: ./Exec/RegTests/HITDecay/
  #    run: |
  #      ./PeleLMeX3d.gnu.MPI.ex input.3d_les amr.max_step=10 amr.plot_int=-1 amr.check_int=-1
  #  - name: RunLES_WALE
  #    working-directory: ./Exec/RegTests/HITDecay/
  #    run: |
  #      ./PeleLMeX3d.gnu.MPI.ex input.3d_les peleLM.les_model="WALE" amr.max_step=10 amr.plot_int=-1 amr.check_int=-1

  # Build and Run the EB_PipeFlow RegTest with GNU9.3 and MPI support
  EBPF3D:
    name: GNU@9.3 MPI Run [EBPF3D]
    runs-on: ubuntu-latest
    env:
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - uses: actions/checkout@v3
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies_gcc10.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELMEX_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
         SUNDIALS_HOME : ${GITHUB_WORKSPACE}/build/sundials
      working-directory: ./Exec/RegTests/EB_PipeFlow/
      run: |
        make TPL COMP=gnu USE_MPI=TRUE
        make -j 2 COMP=gnu USE_MPI=TRUE
    - name: Run
      working-directory: ./Exec/RegTests/EB_PipeFlow/
      run: |
        mpirun -n 2 ./PeleLMeX3d.gnu.MPI.ex input.3d-regt amr.max_step=2 amr.plot_int=-1 amr.check_int=-1 amr.n_cell=128 32 32

  # Build and Run the TurbInflow RegTest in DEBUG with GNU9.3 and MPI support
  TI3D:
    name: GNU@9.3 MPI Run [TI3DDBG]
    runs-on: ubuntu-latest
    env:
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - uses: actions/checkout@v3
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies_gcc10.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: GenerateTurbFile
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELMEX_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
         SUNDIALS_HOME : ${GITHUB_WORKSPACE}/build/sundials
      working-directory: ./Exec/RegTests/TurbInflow/TurbFileHIT
      run: |
        make -j 2 COMP=gnu
        ./PeleTurb3d.gnu.ex input hit_file=../../HITDecay/hit_ic_4_32.dat input_ncell=32
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELMEX_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
         SUNDIALS_HOME : ${GITHUB_WORKSPACE}/build/sundials
      working-directory: ./Exec/RegTests/TurbInflow/
      run: |
        make TPL COMP=gnu USE_MPI=TRUE DEBUG=TRUE
        make -j 2 COMP=gnu USE_MPI=TRUE DEBUG=TRUE
    - name: Run
      working-directory: ./Exec/RegTests/TurbInflow/
      run: |
        mpirun -n 2 ./PeleLMeX3d.gnu.DEBUG.MPI.ex input.3d peleLM.num_init_iter=1 amr.n_cell=32 32 32 amr.max_step=2 amr.plot_int=-1 amr.check_int=-1
        mpirun -n 2 ./PeleLMeX3d.gnu.DEBUG.MPI.ex input.3d_twoInjs peleLM.num_init_iter=1 amr.n_cell=32 32 32 amr.max_step=2 amr.plot_int=-1 amr.check_int=-1
        mpirun -n 2 ./PeleLMeX3d.gnu.DEBUG.MPI.ex input.3d_posX peleLM.num_init_iter=1 amr.n_cell=32 32 32 amr.max_step=2 amr.plot_int=-1 amr.check_int=-1
        mpirun -n 2 ./PeleLMeX3d.gnu.DEBUG.MPI.ex input.3d_BoxLoZ peleLM.num_init_iter=1 amr.n_cell=32 32 32 amr.max_step=2 amr.plot_int=-1 amr.check_int=-1

  # Build and Run the SprayTest RegTest with GNU9.3 and MPI support
  SPRAY:
    name: GNU@9.3 MPI Run [SPRAY]
    runs-on: ubuntu-latest
    env:
      {CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - uses: actions/checkout@v3
    - name: System Dependencies
      run: |
         .github/workflows/dependencies/dependencies_gcc10.sh
         sudo apt-get install -y python3-setuptools
         python3 -m pip install --user numpy
         python3 -m pip install --user argparse
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build AMReX Tools
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
      working-directory: ./build/amrex/Tools/Plotfile
      run: |
        make
    - name: Build PeleLMeX
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELMEX_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
         SUNDIALS_HOME : ${GITHUB_WORKSPACE}/build/sundials
         PELEMP_HOME: ${GITHUB_WORKSPACE}/build/PeleMP
      working-directory: ./Exec/RegTests/SprayTest/
      run: |
        make TPL COMP=gnu USE_MPI=TRUE
        make -j 2 COMP=gnu USE_MPI=TRUE
    - name: Run
      working-directory: ./Exec/RegTests/SprayTest/
      run: |
        cp ${GITHUB_WORKSPACE}/build/amrex/Tools/Plotfile/fcompare.gnu.ex .
        sed -i "s/mpiexec -n 1/mpiexec -n 2/g" multiRuns.py
        ./multiRuns.py
        ./compareOutput.py
