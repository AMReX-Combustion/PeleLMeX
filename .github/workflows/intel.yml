name: PeleLMeX_Intel

on:
  workflow_dispatch:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-intel
  cancel-in-progress: true

jobs:
  #Build the 3D FlameSheet RegTest with DPCPP
  FS3D_DPCPP:
    name: DPCPP C++17 [FS3D]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies_dpcpp.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      run: |
        set +e
        source /opt/intel/oneapi/setvars.sh
        set -e
        cd Exec/RegTests/FlameSheet/
        make TPL COMP=gnu DIM=3 USE_DPCPP=TRUE
        make -j 2 COMP=gnu DIM=3 USE_DPCPP=TRUE

  #Build the EB_EnclosedFlamet RegTest with DPCPP
  EBEF3D_DPCPP:
    name: DPCPP C++17 [EBEF3D]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: System Dependencies
      run: .github/workflows/dependencies/dependencies_dpcpp.sh
    - name: Repo Dependencies
      run: Utils/CloneDeps.sh
    - name: Build
      env:
         AMREX_HOME: ${GITHUB_WORKSPACE}/build/amrex
         PELE_PHYSICS_HOME: ${GITHUB_WORKSPACE}/build/PelePhysics
         PELELM_HOME: ${GITHUB_WORKSPACE}
         AMREX_HYDRO_HOME: ${GITHUB_WORKSPACE}/build/AMReX-Hydro
      run: |
        set +e
        source /opt/intel/oneapi/setvars.sh
        set -e
        cd Exec/RegTests/EB_EnclosedFlame/
        make TPL COMP=gnu DIM=3 USE_DPCPP=TRUE
        make -j 2 COMP=gnu DIM=3 USE_DPCPP=TRUE
